#!/usr/bin/perl
use strict;
use warnings;
use 5.014;

my $debug = 0;


sub findInPath($$) {
    # finds a particular file in a path
    # (filename,pathArrayReference) expected input
    # does an lstat, so returns info from the lstat as well for convenience
    # returns ref to hash:
    # hash->{path} = path to file
    # hash->{type} = file type (file, directory, executable, etc.)
    # hash->{info} = ref to info{} hash from lstat
    # if file not found, return $file with undef $file->{path}

    my $filename = shift || die "ERROR: no filename passed for path search!\n";
    my $paths = shift || die "ERROR: no paths passed to search for $filename!\n";
    my $file = {};

    foreach my $path (@$paths) {
        if (-e "$path/$filename") {
            $file->{info} = stat(_);
            $file->{perm} = "";
            $file->{path} = "$path/$filename";
            $file->{type} = "d" if (-d _);
            $file->{type} = "f" if (-f _);
            $file->{type} = "c" if (-c _);
            $file->{perm} .= "r" if (-r _);
            $file->{perm} .= "x" if (-x _);
            $file->{perm} .= "w" if (-w _);
            $file->{name} = $filename;
            $file->{dir} = $path;
            last;
        }
    }
    if (not defined($file->{path})) {
        $file->{info} = [];
    }
    return $file;
}

my @searchpath=split(/:/, $ENV{PATH});

my $Hash = findInPath("iconv", \@searchpath);
my $iconv=$Hash->{path};
$Hash = findInPath("file", \@searchpath);
my $file=$Hash->{path};
$Hash = findInPath("grep", \@searchpath);
my $grep=$Hash->{path};

$debug && print "Found programs at: $iconv, $file, $grep.\n";
if ( ! -x "$iconv" ) {
    die "Can't find an executable iconv: $iconv!";
}
if ( ! -x "$file" ) {
    die "Can't find an executable version of file: $file!";
}
if ( ! -x "$grep" ) {
    die "Can't find an executable version of grep: $grep!";
}
open(CH, "$iconv -l |");
my %charsets;
while (<CH>) {
    chomp;
    if (m|//$|) {
        #iconv figured out to return programmatic data, not human-readable.
        s|//$||;
        $charsets{$_}=1;
        $debug && print "adding $_ to charsets hash.\n";
        next;
    }
    #the rest is for handling human-readable output from iconv
    if (! /^\s/) {
        # no blank space to start line, not part of the list, which looks like...
        #$ iconv -l
        #The following list contains all the coded character sets known.  This does
        #not necessarily mean that all combinations of these names can be used for
        #the FROM and TO command line parameters.  One coded character set can be
        #listed with several different names (aliases).
        #
        #   437, 500, 500V1, 850, 851, 852, 855, 856, 857, 860, 861, 862, 863, 864, 865,
        #   866, 866NAV, 869, 874, 904, 1026, 1046, 1047, 8859_1, 8859_2, 8859_3, 8859_4,
        #...
        $debug && print "Skipping line: $_\n";
        next;
    }
    my @list=split(/[\s,]+/, $_);
    my %newhash=map { $_ => 1 } @list;
    $debug && print join(", ", keys(%newhash)), "\n";
    %charsets=(%charsets, %newhash);
}
close CH;
# this gives us a list of valid charsets, before we try to use them against iconv.
# now try to figure out which things are arguments for grep, and which are files...
my @filelist;
my $grepargs="";
my $globlabel="";
foreach my $arg (@ARGV) {
    if ( -f "$arg") {
        push @filelist, $arg;
        $debug && print "adding '$arg' to filelist array.\n";
    } else {
        $grepargs.="$arg ";
        $debug && print "adding '$arg' to grepargs.\n";
    }
}
if (scalar @filelist > 1) {
    $globlabel = "--label=" unless ($grepargs=~/-[a-zA-Z]*h/);
    $debug && print "adding --label to \$grepargs because of multiple files.\n";
}

foreach my $entry (@filelist) {
    my $charset=`file -bi $entry`;
    my $label="";
    $charset=~/charset=([^\s]+)/;
    $charset=uc $1;
    $debug && print "using charset: $charset, detected from: $entry.\n";
    if ($globlabel) {
        $label=$globlabel."'$entry' -H"; 
        $debug && print "using label $label.\n";
        #this adds the --label only if we've detected multiple files in use
    }
    my $cmd="";
    unless ($charsets{$charset}) {
        if ($charset eq "BINARY") {
            if ($grepargs=~/-[a0zA-Z]*a/) {
                $cmd="grep $label $grepargs '$entry'";
            } else {
                print "$entry: ERROR: invalid charset $charset!";
                $cmd="echo ''";
            }
        } else {
            $cmd="echo 'Cannot convert charset $charset! Doing nothing with: $entry.'";
        }
    } else {
        $cmd="iconv -f $charset -t utf-8 '$entry' | grep $label $grepargs";
    }
    if ($debug) {
        print "would run: $cmd\n";
    } else {
        print `$cmd`;
    }
}
